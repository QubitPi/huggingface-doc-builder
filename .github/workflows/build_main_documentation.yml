name: Build PR Documentation

env:
  DIFFUSERS_SLOW_IMPORT: yes

on:
  workflow_call:
    inputs:
      commit_sha:
        required: true
        type: string
      package:
        required: true
        type: string
        description: "Name of the GitHub repo."
      package_name:
        type: string
        description: "Name of the Python package if it differs from repo name."
      path_to_docs:
        type: string
      notebook_folder:
        type: string
      # supply --not_python_module for HF Course
      additional_args:
        type: string
      languages:
      # supply space-separated language codes
        type: string
      package_path:
        type: string
      install_rust:
        type: boolean
      install_libgl1:
        type: boolean
      # Command to execute before building the documentation
      pre_command:
        type: string
      repo_owner:
        type: string
        default: 'QubitPi'
        description: "Owner of the repo to build documentation for. Defaults to 'QubitPi'."
      version_tag_suffix:
        type: string
        default: "src/"
        description: "Suffix to add after the version tag (e.g. 1.3.0 or master) in the documentation links."
      convert_notebooks:
        type: boolean
        description: "Convert notebooks to markdown files before building docs."
    secrets:
      slack-webhook-url:
        description: |
          A standard Slack Webhook URL that connects to a Slack channel.
          This is the same thing as "SLACK_WEBHOOK_URL"; please see
          https://github.com/marketplace/actions/slack-send#technique-3-slack-incoming-webhook
          for more info
        required: true

jobs:
  build_main_documentation:
    name: Deploy Documentation to GitHub Pages
    outputs:
      outcome: ${{ job.status }}
    continue-on-error: true
    runs-on: ubuntu-latest
    container:
      huggingface/transformers-doc-builder

    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'QubitPi/huggingface-doc-builder'
          path: doc-builder

      - uses: actions/checkout@v2
        with:
          repository: '${{ inputs.repo_owner }}/${{ inputs.package }}'
          path: ${{ inputs.package }}

      - uses: actions/checkout@v2
        if: inputs.notebook_folder != ''
        with:
          repository: 'huggingface/notebooks'
          path: notebooks

      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache-dependency-path: "kit/package-lock.json"

      - name: Set env variables
        run: |
          if [ -z "${{ inputs.path_to_docs }}" ]
          then
            echo "doc_folder=${{ inputs.package }}/docs/source" >> $GITHUB_ENV
            echo "path_to_docs not provided, defaulting to ${{ inputs.package }}/docs/source"
          else
            echo "doc_folder=${{ inputs.path_to_docs }}" >> $GITHUB_ENV
          fi

          if [ -z "${{ inputs.package_name }}" ];
          then
            echo "package_name=${{ inputs.package }}" >> $GITHUB_ENV
          else
            echo "package_name=${{ inputs.package_name }}" >> $GITHUB_ENV
          fi

      # Needed to upload zips to hf.co
      - name: Install zip
        run: apt-get install -y zip

      - name: Install libgl1
        if: inputs.install_libgl1
        run: apt-get install -y libgl1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        if: inputs.install_rust
        with:
          toolchain: stable

      - name: Setup environment
        shell: bash
        run: |
          pip uninstall -y doc-builder
          cd doc-builder
          git pull origin master
          pip install .
          cd ..

          if [[ -n "${{ inputs.package_path }}" ]]
          then
            cd ${{ inputs.package_path }}
            pip install .[dev]
          elif [[ "${{ inputs.additional_args }}" != *"--not_python_module"* ]];
          then
            cd ${{ inputs.package }}
            pip install .[dev]
          fi
          cd ..

      - name: Setup git
        run: |
          git config --global user.name "QubitPi"
          git config --global user.email jack20220723@gmail.com

      - name: Create build directory
        run: |
          mkdir build_dir
          mkdir build_dir/${{ env.package_name }}
          cd build_dir/${{ env.package_name }}
          wget https://huggingface.co/datasets/hf-doc-build/doc-build/raw/main/${{ env.package_name }}/_versions.yml

      - name: Run pre-command
        shell: bash
        run: |
          if [ ! -z "${{ inputs.pre_command }}" ]
          then
            bash -c "${{ inputs.pre_command }}"
          fi

      - name: Convert notebooks to markdown files
        if: inputs.convert_notebooks
        run: |
          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          remaining_part=$(echo "${{ env.doc_folder }}" | perl -pe 's|^[^/]+||')
          remaining_part=${remaining_part%/}
          echo https://colab.research.google.com/github/${{ inputs.repo_owner }}/${{ inputs.package }}/blob/$branch$remaining_part

          doc-builder notebook-to-mdx ${{ env.doc_folder }} --open_notebook_prefix https://colab.research.google.com/github/${{ inputs.repo_owner }}/${{ inputs.package }}/blob/$branch$remaining_part

      - name: Make documentation
        shell: bash
        env:
          NODE_OPTIONS: --max-old-space-size=6656
        run: |
          echo "doc_folder has been set to ${{ env.doc_folder }}"
          cd doc-builder
          args="--build_dir ../build_dir --clean --html ${{ inputs.additional_args }} --repo_owner ${{ inputs.repo_owner }} --repo_name ${{ inputs.package }} --version_tag_suffix=${{ inputs.version_tag_suffix }}"

          if [ ! -z "${{ inputs.notebook_folder }}" ];
          then
            args="$args --notebook_dir ../notebook_dir"
          fi

          if [ -z "${{ inputs.languages }}" ];
          then
            echo "languages not provided, defaulting to English"
            doc-builder build ${{ env.package_name }} ../${{ env.doc_folder }} $args
          else
            IFS=', ' read -r -a langs <<< "${{ inputs.languages }}"
            for lang in "${langs[@]}"
            do
                echo "Generating docs for language $lang"
                doc-builder build ${{ env.package_name }} ../${{ env.doc_folder }}/$lang $args --language $lang
            done
          fi

          cd ..
          echo "HTML files are: \n"
          find . -name "index.html"

      - name: Deploy documentation (en) to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build_dir/transformers/main/en
          enable_jekyll: false
          user_name: QubitPi
          user_email: jack20220723@gmail.com

  slack-notification:
    name: Send Slack Notification
    if: ${{ always() }}
    needs: build_main_documentation
    uses: QubitPi/hashicorp-aws/.github/workflows/slack-notification.yml@master
    with:
      job-status: ${{ needs.build_main_documentation.outputs.outcome }}
    secrets:
      slack-webhook-url: ${{ secrets.slack-webhook-url }}
